tool.blockstep.name=BlockStep
tool.blockstep.desc=Save BlockStep metadata for this map
tool.blockstep.left=Capture block size (Allow players to step up full blocks)
tool.blockstep.right=Capture block size (Allow players to step up slabs)
tool.blockstep.reload=Reload defaults for this map

tool.blockstep.admins=Only admins can use this tool!

tool.blockstep.reset=Reset all BlockStep metadata for this map!

tool.blockstep.capture.partial=Click on a block 1 layer lower or higher to finish

tool.blockstep.capture.step.slabs=This map's block size is %G, and players can only step up slabs on this map!
tool.blockstep.capture.step.blocks=This map's block size is %G, and players can step up full blocks on this map!
tool.blockstep.capture.help=Here is your %s file; for more info, see this tool's control panel:

tool.blockstep.panel.0=Here's how to get %s supported for this map:
tool.blockstep.panel.1=Step 1: Use this tool to capture this map's block size, and save the provided %s code in a file called %s
tool.blockstep.panel.2=Step 2: If you're this map's creator, place %s in your addon's %s directory
tool.blockstep.panel.3=Step 3: If you're not this map's creator, place %s in your addon's %s directory
tool.blockstep.panel.4=Step 4: Fully disconnect and reload the map, the %s command won't work for detecting your new file
tool.blockstep.panel.5=Step 5: Check BlockStep's console logging! If it reports that defaults were loaded from %s or %s, congrats!
tool.blockstep.panel.6=Thank you for choosing %s! Please let me know what you think, after you've had a chance to play
tool.blockstep.panel.7=The following is %s documentation for addon developers:
tool.blockstep.panel.8=[NOTE] %s is a serverside library, so many aspects of it will only work on the server by default. This may change given enough requests
tool.blockstep.panel.9=Many console variables are stored within the %s library for ease of access. Use the blockstep_debug command to view them

tool.blockstep.support.1=Buymeacoffee
tool.blockstep.support.2=%s trade
tool.blockstep.support.3=%s channel

tool.blockstep.separator=--------------------------------------------------

tool.blockstep.guide=View documentation %s guide
tool.blockstep.github=%s on %s

tool.blockstep.api.func.num=function %s( number desiredDefault = -1 ) saves console variable to %s
tool.blockstep.api.func.bool=function %s( boolean desiredDefault = false ) saves console variable to %s
tool.blockstep.api.func.UpdatePlayerAttributes=function %s( Player player )
tool.blockstep.api.func.getter=function %s()

tool.blockstep.api.desc.SetDefaultBlockSize=Size of this map's blocks in %s units. Set to a negative value to effectively disable the addon.
tool.blockstep.api.desc.SetDefaultStepHeight=Maximum block height players can step up onto. Set to a negative value to disable this aspect of the addon.
tool.blockstep.api.desc.SetDefaultJumpHeight=How high players can jump in blocks. Set to a negative value to disable this aspect of the addon.
tool.blockstep.api.desc.SetDefaultShouldAccountForGravity=When enabled, jump height will recalculate if %s is changed during play. If players could jump 1 block on Earth, they'll continue jumping 1 block on the Moon.
tool.blockstep.api.desc.UpdatePlayerAttributes=Calls the %s and %s hooks on the specified player. If no player is specified, this function calls the hooks for every player in the server. %s by default calls this from the hook identifier %s.
tool.blockstep.api.desc.GetBlockSizeUserValue=Returns the size of this map's blocks in %s units while respecting if the user is overriding this value. Use this getter when able.
tool.blockstep.api.desc.GetStepHeightUserValue=Returns the maximum block height players can step up onto, while respecting if the user is overriding this value. Use this getter when able.
tool.blockstep.api.desc.GetJumpHeightUserValue=Returns how high players can jump in blocks, while respecting if the user is overriding this value. Use this getter when able.
tool.blockstep.api.desc.GetShouldAccountForGravityUserValue=Returns if jump height will recalculate if %s is changed during play, while respecting if the user is overriding this value. Use this getter when able.

tool.blockstep.api.hook.step=hook %s( Player player, number providedStepHeight )
tool.blockstep.api.hook.jump=hook %s( Player player, number providedJumpPower )

tool.blockstep.api.desc.hook=%s uses this hook under the identifier %s. You may remove %s's implementation of this hook for the purposes of your gamemode or server.

tool.blockstep.api.field.num=field number %s
tool.blockstep.api.desc.JumpPower=%s's stored jump power for the current session. Good for reading, don't write to.
tool.blockstep.api.desc.StepHeight=%s's stored step height for the current session. Good for reading, don't write to.
tool.blockstep.api.desc.DefaultJumpPower=%s's default jump power. Feel free to overwrite for the purposes of your gamemode or server.
tool.blockstep.api.desc.DefaultStepHeight=%s's default step height. Feel free to overwrite for the purposes of your gamemode or server.

tool.blockstep.panel.reset_overrides=Reset all override console variables
blockstep.command.reset_overrides=Reset all override console variables!